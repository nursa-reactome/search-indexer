<?xml version="1.0" encoding="UTF-8" ?>

<config>
    <luceneMatchVersion>6.0.1</luceneMatchVersion>
    <dataDir>${solr.data.dir:}</dataDir>
    <directoryFactory name="DirectoryFactory" class="${solr.directoryFactory:solr.NRTCachingDirectoryFactory}"/>
    <codecFactory class="solr.SchemaCodecFactory"/>
    <schemaFactory class="ClassicIndexSchemaFactory"/>
    <indexConfig>
        <ramBufferSizeMB>128</ramBufferSizeMB>
        <lockType>${solr.lock.type:native}</lockType>
        <infoStream>true</infoStream>
    </indexConfig>

    <!-- The default high-performance update handler -->
    <updateHandler class="solr.DirectUpdateHandler2">
        <updateLog>
            <str name="dir">${solr.ulog.dir:}</str>
        </updateLog>
        <autoCommit>
            <maxTime>-1</maxTime>
            <openSearcher>false</openSearcher>
        </autoCommit>
        <autoSoftCommit>
            <maxTime>-1</maxTime>
            <openSearcher>false</openSearcher>
        </autoSoftCommit>
    </updateHandler>

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Query section - these settings control query time things like caches
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <query>
        <maxBooleanClauses>1024</maxBooleanClauses>
        <filterCache class="solr.FastLRUCache" size="512" initialSize="512" autowarmCount="0"/>
        <queryResultCache class="solr.LRUCache" size="512" initialSize="512" autowarmCount="0"/>
        <documentCache class="solr.LRUCache" size="512" initialSize="512" autowarmCount="0"/>
        <cache name="perSegFilter" class="solr.search.LRUCache" size="10" initialSize="0" autowarmCount="10" regenerator="solr.NoOpRegenerator"/>
        <enableLazyFieldLoading>true</enableLazyFieldLoading>
        <queryResultWindowSize>100</queryResultWindowSize>
        <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
        <listener event="newSearcher" class="solr.QuerySenderListener">
            <arr name="queries">
            </arr>
        </listener>
        <listener event="firstSearcher" class="solr.QuerySenderListener">
            <arr name="queries">
                <lst>
                    <str name="q">static firstSearcher warming in solrconfig.xml</str>
                </lst>
            </arr>
        </listener>
        <useColdSearcher>false</useColdSearcher>
        <maxWarmingSearchers>2</maxWarmingSearchers>
    </query>

    <requestDispatcher handleSelect="false">
        <requestParsers enableRemoteStreaming="true" multipartUploadLimitInKB="2048000" formdataUploadLimitInKB="2048" addHttpRequestToContext="false"/>
        <httpCaching never304="true"/>
    </requestDispatcher>

    <requestHandler name="/select" class="solr.SearchHandler">
        <lst name="defaults">
            <str name="q.op">OR</str>
            <str name="echoParams">explicit</str>
            <int name="rows">10</int>
            <str name="df">identifier</str>
        </lst>
    </requestHandler>

    <!--this request handler is used for searching without grouping the result-->
    <requestHandler name="/search" class="solr.SearchHandler">
        <lst name="defaults">
            <str name="q.op">OR</str>
            <str name="echoParams">explicit</str>
            <str name="defType">edismax</str>
            <!-- general Parameters -->
            <str name="q.alt">*:*</str>
            <str name="df">identifier</str>
            <str name="qf">  <!-- query fields: all fields to query in and their individual boosts-->
                identifier^100.0
                id_only^80.0
                geneNames^70.0
                synonyms^50.0
                accessions^100.0
            </str>
        </lst>
    </requestHandler>

    <requestHandler name="/update" class="solr.UpdateRequestHandler"></requestHandler>

    <!-- Field Analysis Request Handler analyses the filed given in the query-->
    <requestHandler name="/analysis/field" startup="lazy" class="solr.FieldAnalysisRequestHandler"/>

    <!-- Document Analysis Handler analyses a single document -->
    <requestHandler name="/analysis/document" class="solr.DocumentAnalysisRequestHandler" startup="lazy"/>

    <!-- ping/healthcheck -->
    <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
        <lst name="invariants">
            <str name="q">solrpingquery</str>
        </lst>
        <lst name="defaults">
            <str name="echoParams">all</str>
        </lst>
    </requestHandler>

    <!-- Echo the request contents back to the client -->
    <requestHandler name="/debug/dump" class="solr.DumpRequestHandler">
        <lst name="defaults">
            <str name="echoParams">explicit</str>
            <str name="echoHandler">true</str>
        </lst>
    </requestHandler>

    <requestHandler name="/replication" class="solr.ReplicationHandler"/>

    <!-- A request handler for demonstrating the terms component -->
    <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
        <lst name="defaults">
            <bool name="terms">true</bool>
            <bool name="distrib">false</bool>
        </lst>
        <arr name="components">
            <str>terms</str>
        </arr>
    </requestHandler>

    <!--search component for spellchecking-->
    <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
        <str name="queryAnalyzerFieldType">text_general</str>
        <!--standard spellchecker using the values in specific fields to build up a dictionary from them -->
        <lst name="spellchecker">
            <str name="q.op">OR</str>
            <str name="name">default</str>
            <!-- name of the spellcheck component-->
            <str name="field">spellcheck</str>
            <!--  field that the spellchecker applies to -->
            <str name="classname">solr.DirectSolrSpellChecker</str>
            <!-- the spellcheck distance measure used, the default is the internal levenshtein -->
            <str name="distanceMeasure">internal</str>
            <!-- minimum accuracy needed to be considered a valid spellcheck suggestion -->
            <float name="accuracy">0.5</float>
            <!-- the maximum #edits we consider when enumerating terms: can be 1 or 2 -->
            <int name="maxEdits">2</int>
            <!-- the minimum shared prefix when enumerating terms -->
            <int name="minPrefix">1</int>
            <!-- maximum number of inspections per result. -->
            <int name="maxInspections">5</int>
            <!-- minimum length of a query term to be considered for correction -->
            <int name="minQueryLength">4</int>
            <!-- maximum threshold of documents a query term can appear to be considered for correction -->
            <float name="maxQueryFrequency">0.01</float>
            <!-- uncomment this to require suggestions to occur in 1% of the documents
                <float name="thresholdTokenFrequency">.01</float>
            -->
            <str name="buildOnCommit">true</str>
            <!-- this spellcheck dictionary will be build upon optimization (his will take away workload from commiting and will improve index speed-->
        </lst>

        <!-- a spellchecker that can break or combine words.  See "/spell" handler below for usage -->
        <lst name="spellchecker">
            <str name="name">wordbreak</str>
            <!-- name of the spellcheck component-->
            <str name="classname">solr.WordBreakSolrSpellChecker</str>
            <!-- this spellchecker is used for breaking or combining words-->
            <str name="field">spellcheck</str>
            <!--  field that the spellchecker applies to -->
            <str name="combineWords">true</str>
            <!-- allows to combine Words-->
            <str name="breakWords">true</str>
            <!-- allows to break Words-->
            <int name="maxChanges">10</int>
            <!-- maximum number of changes made to be matched-->
            <str name="buildOnCommit">true</str>
            <!-- not sure if this is the optimal way to do it-->
        </lst>
    </searchComponent>
    <searchComponent name="terms" class="solr.TermsComponent"/>

    <!--spellcheck component for autosuggestions, this spellchecker creates a dictionary using the values in specific fields-->
    <searchComponent class="solr.SpellCheckComponent" name="suggest">
        <lst name="spellchecker">
            <str name="q.op">OR</str>
            <str name="name">suggest</str>
            <!-- name of the spellcheck component-->
            <str name="classname">org.apache.solr.spelling.suggest.Suggester</str>
            <!-- component -->
            <str name="lookupImpl">org.apache.solr.spelling.suggest.fst.WFSTLookupFactory</str>
            <!-- spellchecker implementation-->
            <str name="field">spellcheck</str>
            <!-- the indexed field to derive suggestions from -->
            <float name="threshold">0</float>
            <!-- threshold is a value in [0..1] representing the minimum fraction of documents (of the total) where a term should appear, in order to be added to the lookup dictionary.  Interesting question: difference between good results when looking for eg a singe letter or specific results
            eg 0.05 = value must be in 5% of all entries to get into the dictionary
            -->
            <str name="buildOnCommit">true</str>
            <!-- this spellcheck dictionary will be build upon optimization (his will take away workload from commiting and will improve index speed-->
        </lst>
    </searchComponent>

    <admin>
        <defaultQuery>*:*</defaultQuery>
    </admin>

</config>
